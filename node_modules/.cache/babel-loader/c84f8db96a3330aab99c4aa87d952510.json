{"ast":null,"code":"var _jsxFileName = \"/media/mapper/react/react_practice/connnecting-api/src/App.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovies from \"./components/AddMovie\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchMovieHandler();\n  }, []);\n  const fetchMovieHandler = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      setError(null); // const response = await fetch(\"https://swapi.dev/api/films/\");\n\n      const response = await fetch(\"https://react-practice-http-945c2-default-rtdb.firebaseio.com/movies.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      let transformedMovies = data.results.map((moviesData, index) => {\n        return {\n          id: moviesData.episode_id,\n          title: moviesData.title,\n          releaseDate: moviesData.release_date,\n          openingText: moviesData.opening_crawl\n        };\n      });\n      console.log(data.results);\n      setMovies(transformedMovies); // setIsLoading(false);\n    } catch (err) {\n      console.log(err.message);\n      setError(err.message);\n    }\n\n    setIsLoading(false); // ---------OR--------\n    // fetch(\"https://swapi.dev/api/films/\")\n    //   .then((response) => {\n    //     return response.json();\n    //   })\n    //   .then((data) => {\n    //     let transformedMovies = data.results.map((moviesData, index) => {\n    //       return {\n    //         id: moviesData.episode_id,\n    //         title: moviesData.title,\n    //         releaseDate: moviesData.release_date,\n    //         openingText: moviesData.opening_crawl,\n    //       };\n    //     });\n    //     console.log(data.resulAddMoviests);\n    //     setMovies(transformedMovies);\n    //   })\n    //   .catch();\n  }, []);\n\n  const addMoviesHandler = movie => {\n    fetch(\"https://react-practice-http-945c2-default-rtdb.firebaseio.com/movies.json\", {\n      method: \"POST\",\n      body: JSON.stringify(movie)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddMovies, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && !error && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), !isLoading && movies.length === 0 && !error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 57\n    }\n  }, \"Movies not found\"), isLoading && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }\n  }, \"Loading...\"), !isLoading && error && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, error)));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovies","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovieHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","moviesData","index","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","console","log","err","message","addMoviesHandler","movie","method","body","JSON","stringify","length"],"sources":["/media/mapper/react/react_practice/connnecting-api/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nimport AddMovies from \"./components/AddMovie\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchMovieHandler();\n  }, []);\n\n  const fetchMovieHandler = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // const response = await fetch(\"https://swapi.dev/api/films/\");\n      const response = await fetch(\n        \"https://react-practice-http-945c2-default-rtdb.firebaseio.com/movies.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      let transformedMovies = data.results.map((moviesData, index) => {\n        return {\n          id: moviesData.episode_id,\n          title: moviesData.title,\n          releaseDate: moviesData.release_date,\n          openingText: moviesData.opening_crawl,\n        };\n      });\n      console.log(data.results);\n      setMovies(transformedMovies);\n      // setIsLoading(false);\n    } catch (err) {\n      console.log(err.message);\n      setError(err.message);\n    }\n    setIsLoading(false);\n\n    // ---------OR--------\n\n    // fetch(\"https://swapi.dev/api/films/\")\n    //   .then((response) => {\n    //     return response.json();\n    //   })\n    //   .then((data) => {\n    //     let transformedMovies = data.results.map((moviesData, index) => {\n    //       return {\n    //         id: moviesData.episode_id,\n    //         title: moviesData.title,\n    //         releaseDate: moviesData.release_date,\n    //         openingText: moviesData.opening_crawl,\n    //       };\n    //     });\n    //     console.log(data.resulAddMoviests);\n    //     setMovies(transformedMovies);\n    //   })\n    //   .catch();\n  }, []);\n\n  const addMoviesHandler = (movie) => {\n    fetch(\n      \"https://react-practice-http-945c2-default-rtdb.firebaseio.com/movies.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n      }\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovies />\n      </section>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && !error && (\n          <MoviesList movies={movies} />\n        )}\n        {!isLoading && movies.length === 0 && !error && <p>Movies not found</p>}\n        {isLoading && <span>Loading...</span>}\n        {!isLoading && error && <span>{error}</span>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}